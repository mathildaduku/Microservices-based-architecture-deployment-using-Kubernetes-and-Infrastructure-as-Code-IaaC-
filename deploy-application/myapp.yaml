---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: psql-deployment
  labels:
    app: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      name: psql-pod
      app: myapp
  template:
    metadata:
      name: psql-pod
      labels:
        name: psql-pod
        app: myapp

    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres

---

apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    name: db-service
    app: myapp
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    name: psql-pod
    app: myapp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis-pod
      app: myapp
  template:
    metadata:
      name: redis-pod
      labels:
        name: redis-pod
        app: myapp

    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    name: redis-service
    app: myapp
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    name: redis-pod
    app: myapp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: result-deployment
  labels:
    app: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      name: result-pod
      app: myapp
  template:
    metadata:
      name: result-pod
      labels:
        name: result-pod
        app: myapp

    spec:
      containers:
      - name: result-app
        image: dockersamples/examplevotingapp_result
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: result-service
  labels:
    name: result-service
    app: myapp
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: result-pod
    app: myapp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: voting-app-deployment
  labels:
    app: myapp
spec:
  replicas: 3
  selector:
    matchLabels:
      name: voting-pod
      app: myapp
  template:
    metadata:
      name: voting-pod
      labels:
        name: voting-pod
        app: myapp

    spec:
      containers:
      - name: voting-app
        image: kodekloud/examplevotingapp_vote:v1
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: voting-service
  labels:
    name: voting-service
    app: myapp
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    name: voting-pod
    app: myapp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
  labels:
    app: myapp
spec:
  replicas: 3
  selector:
    matchLabels:
      name: worker-pod
      app: myapp
  template:
    metadata:
      name: worker-pod
      labels:
        name: worker-pod
        app: myapp

    spec:
      containers:
      - name: worker-app
        image: dockersamples/examplevotingapp_worker